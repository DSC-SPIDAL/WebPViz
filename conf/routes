# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                   controllers.Application.index()

# Admin Dashboard
GET         /dashboard                          controllers.Application.dashboard()

GET         /publicdashboard                    controllers.Application.publicDashboard()

GET         /groupdashboard/:group              controllers.Application.groupDashboard(group: String)
GET         /public/groupdashboard/:group       controllers.Application.groupDashboardPublic(group: String)

# about page
GET         /about                              controllers.Application.about()

# Log in
GET         /login                              controllers.Application.login()
POST        /authenticate                       controllers.Application.authenticate()
GET         /authenticate                       controllers.Application.authenticateGet()

#plot
#GET         /plot                               controllers.Application.visualize(rid: Integer, tid: Integer)

# Log out
GET         /logout                             controllers.Application.logout()

# Upload
POST        /upload                             controllers.Application.upload()
POST        /update                             controllers.Application.updateFile()
GET         /upload                             controllers.Application.uploadGet()
#TODO need to replace this with post call
GET      /delete/:id                            controllers.Application.delete(id: Integer)

# Visualize
GET         /resultsets/:tid                    controllers.Application.singlePage(tid: Integer)
GET         /public/resultsets/:tid             controllers.Application.singlePublicPage(tid: Integer)
#GET         /resultsets/:tid/file/:rid          controllers.Application.visualize(rid: Integer, tid: Integer)
GET         /timeseriesview/:id                 controllers.Application.timeSeriesPage(id: Integer)
GET         /public/timeseriesview/:id                 controllers.Application.timeSeriesPublicPage(id: Integer)

# ResultSet data
#GET         /resultset/:tid/file/:rid           controllers.Application.resultset(rid: Integer, tid: Integer)

#GET         /resultset/:tid/file/:rid/cluster/:cid      controllers.Application.cluster(rid: Integer, cid: Integer, tid: Integer)


GET         /resultssetall/:tid/file/:rid       controllers.Application.getFile(tid: Integer, rid: Integer)
GET         /public/resultssetall/:tid/file/:rid       controllers.Application.getPublicFile(tid: Integer, rid: Integer)

#time series
GET         /timeseries/:id                     controllers.Application.getArtifact(id: Integer)
GET         /public/timeseries/:id              controllers.Application.getPublicArtifact(id: Integer)

GET         /registerpage                       controllers.Application.reg()
POST         /register                       controllers.Application.register()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                       controllers.Assets.at(path="/public", file)

GET         /groups                             controllers.GroupController.groups()

GET         /groups/delete/:name                controllers.GroupController.removeGroup(name: String)

POST        /groups/create                      controllers.GroupController.newGroup()

POST        /groups/update                      controllers.GroupController.updateGroup()

GET         /alltags                               controllers.TagController.getTags()

POST        /timeseries/save                    controllers.Application.savePlot()

GET         /publicinfo/:id                     controllers.Application.publicInfo(id: Integer)

GET         /info/:id                           controllers.Application.info(id: Integer)

GET         /artifact/:id/experiment            controllers.ExperimentController.getExperiment(id: Integer)
POST        /artifact/experiment                controllers.ExperimentController.updateExperiment()

POST        /artifact/comment                   controllers.CommentController.addComment()
GET         /artifact/:id/comment               controllers.CommentController.getComments(id: Integer)

